{"ast":null,"code":"import _classCallCheck from \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/src/Stopwatch.js\";\nimport React, { Component } from 'react';\nimport { formatTime } from './time';\n\nvar Stopwatch =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Stopwatch, _Component);\n\n  function Stopwatch(_ref) {\n    var _this;\n\n    var running = _ref.running,\n        runningTime = _ref.runningTime;\n\n    _classCallCheck(this, Stopwatch);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Stopwatch).call(this));\n\n    _this.handleButton = function () {\n      if (!_this.state.running) {\n        _this.setState({\n          startTime: Date.now()\n        });\n\n        _this.timer = setInterval(function () {\n          return _this.setState({\n            runningTime: Date.now() - _this.state.startTime\n          });\n        }, 10);\n      } else {\n        clearInterval(_this.timer);\n\n        _this.props.updateTimes(_this.state.runningTime);\n      }\n\n      _this.setState({\n        running: !_this.state.running\n      });\n    };\n\n    _this.state = {\n      running: running,\n      runningTime: runningTime,\n      startTime: null\n    };\n    return _this;\n  }\n\n  _createClass(Stopwatch, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.running !== this.state.running) {\n        this.handleButton();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"flex flex-column justify-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"ph6 pv4 f-headline center tracked-tight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, formatTime(this.state.runningTime)), React.createElement(\"div\", {\n        className: \"pb3 center ph5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.state.running ? React.createElement(\"button\", {\n        onClick: this.handleButton,\n        className: \"Stop\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"STOP\") : React.createElement(\"button\", {\n        onClick: this.handleButton,\n        className: \"Start\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"START\")));\n    }\n  }]);\n\n  return Stopwatch;\n}(Component);\n\nexport { Stopwatch as default };","map":{"version":3,"sources":["/home/pranuthideepak/Desktop/SOAL/ms09-lupus/ms09-cubetimer/cubetimer/src/Stopwatch.js"],"names":["React","Component","formatTime","Stopwatch","running","runningTime","handleButton","state","setState","startTime","Date","now","timer","setInterval","clearInterval","props","updateTimes","nextProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,UAAR,QAAyB,QAAzB;;IAEqBC,S;;;;;AAGjB,2BAAmC;AAAA;;AAAA,QAAtBC,OAAsB,QAAtBA,OAAsB;AAAA,QAAbC,WAAa,QAAbA,WAAa;;AAAA;;AAC/B;;AAD+B,UAenCC,YAfmC,GAepB,YAAM;AACjB,UAAI,CAAC,MAAKC,KAAL,CAAWH,OAAhB,EAAyB;AACrB,cAAKI,QAAL,CAAc;AAACC,UAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL;AAAZ,SAAd;;AACA,cAAKC,KAAL,GAAaC,WAAW,CACpB;AAAA,iBAAM,MAAKL,QAAL,CAAc;AAACH,YAAAA,WAAW,EAAEK,IAAI,CAACC,GAAL,KAAa,MAAKJ,KAAL,CAAWE;AAAtC,WAAd,CAAN;AAAA,SADoB,EACmD,EADnD,CAAxB;AAEH,OAJD,MAIO;AACHK,QAAAA,aAAa,CAAC,MAAKF,KAAN,CAAb;;AACA,cAAKG,KAAL,CAAWC,WAAX,CAAuB,MAAKT,KAAL,CAAWF,WAAlC;AACH;;AACD,YAAKG,QAAL,CAAc;AACVJ,QAAAA,OAAO,EAAE,CAAC,MAAKG,KAAL,CAAWH;AADX,OAAd;AAGH,KA3BkC;;AAE/B,UAAKG,KAAL,GAAa;AACTH,MAAAA,OAAO,EAAPA,OADS;AAETC,MAAAA,WAAW,EAAXA,WAFS;AAGTI,MAAAA,SAAS,EAAE;AAHF,KAAb;AAF+B;AAOlC;;;;8CAEyBQ,S,EAAU;AAChC,UAAIA,SAAS,CAACb,OAAV,KAAsB,KAAKG,KAAL,CAAWH,OAArC,EAA8C;AAC1C,aAAKE,YAAL;AACH;AACJ;;;6BAgBO;AAEJ,aAEI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,yCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKJ,UAAU,CAAC,KAAKK,KAAL,CAAWF,WAAZ,CADf,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKE,KAAL,CAAWH,OAAX,GACD;AAAQ,QAAA,OAAO,EAAE,KAAKE,YAAtB;AAAoC,QAAA,SAAS,EAAC,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADC,GAED;AAAQ,QAAA,OAAO,EAAE,KAAKA,YAAtB;AAAoC,QAAA,SAAS,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,CAJJ,CAFJ;AAiBH;;;;EAnDkCL,S;;SAAlBE,S","sourcesContent":["import React, { Component } from 'react';\nimport {formatTime} from './time'\n\nexport default class Stopwatch extends Component {\n\n\n    constructor({running, runningTime}){\n        super();\n        this.state = {\n            running,\n            runningTime,\n            startTime: null,\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (nextProps.running !== this.state.running) {\n            this.handleButton()\n        }\n    }\n\n    handleButton = () => {\n        if (!this.state.running) {\n            this.setState({startTime: Date.now()})\n            this.timer = setInterval(\n                () => this.setState({runningTime: Date.now() - this.state.startTime}), 10) \n        } else {\n            clearInterval(this.timer)\n            this.props.updateTimes(this.state.runningTime)\n        }\n        this.setState({\n            running: !this.state.running\n        })\n    }\n\n    render(){\n\n        return(\n\n            <div className='flex flex-column justify-center'>\n                <div className='ph6 pv4 f-headline center tracked-tight'>\n                    {formatTime(this.state.runningTime)}\n                </div>\n                <div className='pb3 center ph5'>\n                    {this.state.running ? \n                    <button onClick={this.handleButton} className=\"Stop\">STOP</button>: \n                    <button onClick={this.handleButton} className=\"Start\">START</button>}\n                    \n                </div>\n            </div>\n\n\n        )\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}